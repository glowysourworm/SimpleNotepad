<Window x:Class="SimpleNotepad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SimpleNotepad"
        xmlns:simpleUI="clr-namespace:SimpleWpf.UI.Controls;assembly=SimpleWpf.UI"
        xmlns:localView="clr-namespace:SimpleNotepad.View"
        xmlns:dock="https://github.com/Dirkster99/AvalonDock"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:system="clr-namespace:System;assembly=System"
        xmlns:viewModel="clr-namespace:SimpleNotepad.ViewModel"
        xmlns:selector="clr-namespace:SimpleNotepad.View.DataTemplateSelectors"
        xmlns:view="clr-namespace:SimpleNotepad.View"
        Icon="/favicon.ico"
        Title="Simple Notepad" Height="700" Width="1200">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Command="{Binding OpenCommand}" />
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" />
                <MenuItem Header="Save _As" Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="Save _Template(s)" Command="{Binding SaveTemplatesCommand}" />
                <MenuItem Header="_Close" Command="{Binding CloseCommand}" />
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <ToolBarPanel Orientation="Horizontal" Margin="5">
                
                <Button fa5:Awesome.Content="Solid_Circle"
                        Command="{Binding RecordCommand}"
                        Style="{StaticResource ToolbarRecordingButtonStyle}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolANDMultiConverter}">
                            <Binding Path="IsRecording" Converter="{StaticResource BoolInverseConverter}" />
                            <Binding Path="Mode" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static viewModel:PlayMode.Macro}" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                
                <Button fa5:Awesome.Content="Solid_Stop" 
                        Command="{Binding StopCommand}"
                        Style="{StaticResource ToolbarButtonStyle}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolANDMultiConverter}">
                            <Binding Path="IsRecording" />
                            <Binding Path="Mode" Converter="{StaticResource ParameterEqualityBoolConverter}" ConverterParameter="{x:Static viewModel:PlayMode.Macro}" />
                        </MultiBinding>
                    </Button.IsEnabled>                    
                </Button>
                
                <Button fa5:Awesome.Content="Solid_Play" 
                        IsEnabled="{Binding IsPlayable}"
                        Command="{Binding PlayCommand}"                        
                        Style="{StaticResource ToolbarButtonStyle}" 
                        ToolTip="Play Current Line" />
                
                <Button fa5:Awesome.Content="Solid_FastForward" 
                        IsEnabled="{Binding IsPlayable}"
                        Command="{Binding PlayRestCommand}"
                        Style="{StaticResource ToolbarButtonStyle}" 
                        ToolTip="Play Until End Of File" />
                
            </ToolBarPanel>
            <ToolBarPanel Orientation="Horizontal" Margin="5">
                <RadioButton Foreground="#DF000000" IsChecked="{Binding Path=Mode, Converter={StaticResource ParameterEqualityBoolConverter}, ConverterParameter={x:Static viewModel:PlayMode.Macro}}" GroupName="MacroMode" Style="{StaticResource ToolbarRadioButtonStyle}">Macro</RadioButton>
                <RadioButton Foreground="#DF000000" IsChecked="{Binding Path=Mode, Converter={StaticResource ParameterEqualityBoolConverter}, ConverterParameter={x:Static viewModel:PlayMode.SyntaxTemplate}}" GroupName="MacroMode" Style="{StaticResource ToolbarRadioButtonStyle}">Syntax Template</RadioButton>
                <RadioButton Foreground="#DF000000" IsChecked="{Binding Path=Mode, Converter={StaticResource ParameterEqualityBoolConverter}, ConverterParameter={x:Static viewModel:PlayMode.Script}}" GroupName="MacroMode" Style="{StaticResource ToolbarRadioButtonStyle}">Script</RadioButton>
            </ToolBarPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding Path=Mode, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static viewModel:PlayMode.SyntaxTemplate}}">
                <TextBlock Text="Active Syntax Template" Margin="5" VerticalAlignment="Center" />
                <ComboBox Width="200" DisplayMemberPath="Name" 
                          SelectedValue="{Binding SelectedSyntaxTemplate}"
                          ItemsSource="{Binding SyntaxTemplates}" 
                          Margin="5" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" 
                        Visibility="{Binding Path=Mode, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static viewModel:PlayMode.Macro}}">
                <TextBlock Text="Active Macro" Margin="5" VerticalAlignment="Center" />
                <ComboBox Width="200" DisplayMemberPath="Name" 
                          SelectedValue="{Binding SelectedMacro}"
                          ItemsSource="{Binding Macros}" 
                          Margin="5" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" 
                        Visibility="{Binding Path=Mode, Converter={StaticResource ParameterVisibilityCollapsedConverter}, ConverterParameter={x:Static viewModel:PlayMode.Script}}">
                
                <TextBlock Text="Active Script" Margin="5" VerticalAlignment="Center" />
                <ComboBox Width="200" DisplayMemberPath="Name" 
                          SelectedValue="{Binding SelectedScript}"
                          ItemsSource="{Binding Scripts}" 
                          Margin="5" VerticalAlignment="Center" />

                <!-- Compiled (Active Method) -->
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding SelectedScript.IsCompiled, Converter={StaticResource BoolVisibilityCollapseConverter}}">
                    
                    <TextBlock Text="Active Method" Margin="5" VerticalAlignment="Center" />
                    <ComboBox Width="200" 
                              SelectedValue="{Binding SelectedScriptMethod}"
                              ItemsSource="{Binding SelectedScript.PublicMethods}" 
                              Margin="5" VerticalAlignment="Center" />
                </StackPanel>

                <!-- Not Compiled (Compile) -->
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding SelectedScript.IsCompiled, Converter={StaticResource BoolInverseVisibilityCollapseConverter}}">
                    <Button Content="Compile" Style="{StaticResource ToolbarButtonStyle}" Command="{Binding SelectedScript.CompileCommand}" Padding="5" Margin="5" />
                </StackPanel>                

            </StackPanel>
        </ToolBar>
        
        <dock:DockingManager x:Name="DockingManager" Grid.Row="2"
                             DocumentsSource="{Binding DockingManagerItemsSource}"
                             AllowMixedOrientation="True">
            <dock:DockingManager.Theme>
                <dock:Vs2013LightTheme />
            </dock:DockingManager.Theme>

            <dock:DockingManager.LayoutItemTemplateSelector>
                <selector:MainDockerDataTemplateSelector>
                    <selector:MainDockerDataTemplateSelector.DocumentTemplateDefault>

                        <!-- Default = Document template -->
                        <DataTemplate>
                            <view:DocumentView Source="{Binding Model.Contents, Mode=TwoWay}" IsChanged="{Binding Model.IsDirty, Mode=TwoWay}" />
                        </DataTemplate>

                    </selector:MainDockerDataTemplateSelector.DocumentTemplateDefault>
                    <selector:MainDockerDataTemplateSelector.SyntaxTemplatesMain>
                        
                        <!-- SyntaxTemplates = Syntax Template Main View -->
                        <DataTemplate>
                            <view:SyntaxTemplateMainView />
                        </DataTemplate>
                        
                    </selector:MainDockerDataTemplateSelector.SyntaxTemplatesMain>
                    <selector:MainDockerDataTemplateSelector.ScriptMain>

                        <!-- SyntaxTemplates = Syntax Template Main View -->
                        <DataTemplate>
                            <view:ScriptMainView />
                        </DataTemplate>

                    </selector:MainDockerDataTemplateSelector.ScriptMain>
                </selector:MainDockerDataTemplateSelector>
            </dock:DockingManager.LayoutItemTemplateSelector>

            <!-- Document "Tab" Style --> 
            <dock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type dock:LayoutItem}">
                    
                    <!-- NOT OBVIOUS!!! (Model is an internal property - which contains our ViewModel) -->
                    <Setter Property="Title" Value="{Binding Model.Header}" />
                    <Setter Property="ToolTip" Value="{Binding Model.FileName}" />
                    <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                </Style>
            </dock:DockingManager.LayoutItemContainerStyle>

        </dock:DockingManager>
    </Grid>
</Window>
