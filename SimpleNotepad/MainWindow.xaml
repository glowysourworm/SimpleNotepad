<Window x:Class="SimpleNotepad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SimpleNotepad"
        xmlns:simpleUI="clr-namespace:SimpleWpf.UI.Controls;assembly=SimpleWpf.UI"
        xmlns:localView="clr-namespace:SimpleNotepad.View"
        xmlns:dock="https://github.com/Dirkster99/AvalonDock"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:system="clr-namespace:System;assembly=System"
        xmlns:viewModel="clr-namespace:SimpleNotepad.ViewModel"
        xmlns:selector="clr-namespace:SimpleNotepad.View.DataTemplateSelectors"
        xmlns:view="clr-namespace:SimpleNotepad.View"
        Title="Simple Notepad" Height="700" Width="1200">
    <Window.Resources>
        <Style x:Key="ToolbarButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="ToolbarRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#3F00CCFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>        
    </Window.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Command="{Binding OpenCommand}" />
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" />
                <MenuItem Header="Save _As" Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="_Close" Command="{Binding CloseCommand}" />
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <ToolBarPanel Orientation="Horizontal" Margin="5">
                <Button fa5:Awesome.Content="Solid_Circle" Style="{StaticResource ToolbarButtonStyle}" />
                <Button fa5:Awesome.Content="Solid_Stop" Style="{StaticResource ToolbarButtonStyle}" />
                <Button fa5:Awesome.Content="Solid_Play" 
                        Command="{Binding PlayCommand}"                        
                        Style="{StaticResource ToolbarButtonStyle}" 
                        ToolTip="Play Current Line" />
                <Button fa5:Awesome.Content="Solid_FastForward" Style="{StaticResource ToolbarButtonStyle}" ToolTip="Play Until End Of File" />
            </ToolBarPanel>
            <ToolBarPanel Orientation="Horizontal" Margin="5">
                <RadioButton GroupName="MacroMode" Style="{StaticResource ToolbarRadioButtonStyle}">Macro</RadioButton>
                <RadioButton GroupName="MacroMode" Style="{StaticResource ToolbarRadioButtonStyle}">Syntax Template</RadioButton>
            </ToolBarPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Active Template" Margin="5" VerticalAlignment="Center" />
                <ComboBox Width="200" DisplayMemberPath="Name" 
                          SelectedValue="{Binding SelectedSyntaxTemplate}"
                          ItemsSource="{Binding SyntaxTemplates}" 
                          Margin="5" VerticalAlignment="Center" />
            </StackPanel>
        </ToolBar>
        
        <dock:DockingManager x:Name="DockingManager" Grid.Row="2"
                             DocumentsSource="{Binding DockingManagerItemsSource}"
                             AllowMixedOrientation="True">
            <dock:DockingManager.Theme>
                <dock:Vs2013LightTheme />
            </dock:DockingManager.Theme>

            <dock:DockingManager.LayoutItemTemplateSelector>
                <selector:MainDockerDataTemplateSelector>
                    <selector:MainDockerDataTemplateSelector.DocumentTemplateDefault>

                        <!-- Default = Document template -->
                        <DataTemplate>
                            <view:DocumentView Source="{Binding Model.Contents, Mode=TwoWay}" IsChanged="{Binding Model.IsDirty, Mode=TwoWay}" />
                        </DataTemplate>

                    </selector:MainDockerDataTemplateSelector.DocumentTemplateDefault>
                    <selector:MainDockerDataTemplateSelector.SyntaxTemplatesMain>
                        
                        <!-- SyntaxTemplates = Syntax Template Main View -->
                        <DataTemplate>
                            <view:SyntaxTemplateMainView />
                        </DataTemplate>
                        
                    </selector:MainDockerDataTemplateSelector.SyntaxTemplatesMain>
                </selector:MainDockerDataTemplateSelector>
            </dock:DockingManager.LayoutItemTemplateSelector>

            <!-- Document "Tab" Style --> 
            <dock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type dock:LayoutItem}">
                    
                    <!-- NOT OBVIOUS!!! (Model is an internal property - which contains our ViewModel) -->
                    <Setter Property="Title" Value="{Binding Model.Header}" />
                    <Setter Property="ToolTip" Value="{Binding Model.FileName}" />
                    <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                </Style>
            </dock:DockingManager.LayoutItemContainerStyle>

            <!--dock:LayoutRoot x:Name="_layoutRoot">

                <dock:LayoutRoot.RightSide>
                    <dock:LayoutAnchorSide>
                        <dock:LayoutAnchorGroup>

                            <dock:LayoutAnchorable ContentId="SyntaxTemplates" Title="Syntax Templates">
                                
                            </dock:LayoutAnchorable>

                            <dock:LayoutAnchorable ContentId="Macros" Title="Macros" >

                            </dock:LayoutAnchorable>
                            
                        </dock:LayoutAnchorGroup>
                    </dock:LayoutAnchorSide>
                </dock:LayoutRoot.RightSide>
                
            </dock:LayoutRoot-->
        </dock:DockingManager>
    </Grid>
</Window>
